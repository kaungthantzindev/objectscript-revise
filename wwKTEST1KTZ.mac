ROUTINE wwKTEST1KTZ
wwKTEST1KTZ ;

Q1;
    Write "1. 権限マスタに現在何件のルーチンが登録されているか表示してください。", !
    Set count = 0
    Set K1 = ""
    For {
        Set K1 = $ORDER(^MKEN1KTZ(K1))
        If K1 = "" Quit 
        Set count = count + 1
    }

    Write "Total registered routines : ", count

Q2;
    Write "2. 権限マスタより、「ABCNS0151」のデータを取得し、セミコロン(;)区切りで表示してください。", !
    Set K1 = "ABCNS0151"
    If '$DATA(^MKEN1KTZ(K1)) {
        Write "No data found", !
        Quit
    }

    Set data = ^MKEN1KTZ(K1)

    Set P1 = $PIECE(data, $CHAR(22), 1)
    Set P2 = $PIECE(data, $CHAR(22), 2)
    Set P3 = $PIECE(data, $CHAR(22), 3)
    Write P1, ";", P2, ";", P3

Q3;
    Write "3. ルーチンIDの先頭がDであるものを全て出力してください。", !
    Set K1 = ""
    For {
        Set K1 = $ORDER(^MKEN1KTZ(K1))
        If K1 = "" Quit
        If $EXTRACT(K1, 1) = "D" {
            Write K1, ! 
        }
    }
    Quit

Q4
    Write "4. 権限マスタから先頭が「w」であるものを削除してください。", !
    Set K1 = ""
    For {
        Set K1 = $ORDER(^MKEN1KTZ(K1))
        If K1 = "" Quit
        Set data = $EXTRACT(K1,1)
        #; we can use $ZCONVERT to check uppercase and lowercase
        If $EXTRACT(K1,1) = "w" {
            Kill ^MKEN1KTZ(K1)
        }
    }
    Write "Killed!!"
    Quit 

Q5
    Write "5. 権限マスタより、「KEIW0011」のデータを取得し、そのルーチンの権限を持っているグループ名を全て表示してください。", !

    Set K1 = "KEIW0011"
    Set data = $GET(^MKEN1KTZ(K1))
    Set groupCodes = $PIECE(data, $CHAR(22), 1)
    Set splittedGroupCodes = $LISTFROMSTRING(groupCodes, "/")
    For position = 1:1:$LISTLENGTH(splittedGroupCodes) {
        Set groupCode = $LISTGET(splittedGroupCodes, position)
        Set groupName = $GET(^MDIC("職務グループ", groupCode), "Unknown")
        Write "Group code : ", groupCode, " | Group name : ", $LISTGET(groupName), !
    }

    Quit

Q6;
    Write "6. 権限マスタより、「swAHS」のデータを取得し、更新日と登録日をYYYY年MM月DD日として表示してください。", !
    Set K1 = "swAHS"
    Set data = $GET(^MKEN1KTZ(K1))
    If data = "" {
        Write "No data found",!
        Quit
    }
    Set updatedDate = $PIECE(data, $CHAR(22), 2)
    Set registeredDate = $PIECE(data, $CHAR(22), 3)
    Write "[swAHS] の data : ", data, !
    Write "Updated Date : ", updatedDate, " | Registered Date : ", registeredDate, !
    Quit

Q7;
    Write "7. 権限マスタより、「INQWMS0030」のデータを取得し、管理グループに「A」を追加して更新してください。（更新日も更新", !
    Set K1 = "INQWMS0030"
    Set data = $GET(^MKEN1KTZ(K1))
    Set originalGroupCode = $PIECE(data, $CHAR(22), 1)
    Set originalUpdateDate = $PIECE(data, $CHAR(22), 2)
    If $FIND(originalGroupCode, "A") > 0 {
        Write "A already exist!", !
        Quit
    }

    Set tempGroupCode = originalGroupCode_"/A"
    Set updatedGroupCode = $REPLACE(data, originalGroupCode, tempGroupCode)
    Set ^MKEN1KTZ(K1) = updatedGroupCode
    Set newUpdateDate = $REPLACE(^MKEN1KTZ(K1), originalUpdateDate, $ZDATE($HOROLOG, 8), 1, 1) 
    Set ^MKEN1KTZ(K1) = newUpdateDate
    Write ^MKEN1KTZ(K1)
    Quit
    
    
Q8;
    Write "5. 権限マスタより、「MSTMZATUSHO」のデータを取得し、職務グループマスタに存在しないｸﾞﾙｰﾌﾟｺｰﾄﾞがあった場合、削除して更新してください。", !
    Set K1 = "MSTMZATUSHO"
    Set data = $GET(^MKEN1KTZ(K1))
    Set groupCodes = $PIECE(data, $CHAR(22), 1)
    Set groupStr = $LISTFROMSTRING(groupCodes , "/")
    Write data, !
    For i = 1:1:$LISTLENGTH(groupStr) {
        Set groupCode = $LISTGET(groupStr , i)
        Set groupName = $GET(^MDIC("職務グループ", groupCode))
        If groupName = "" {
            Set updatedData = $REPLACE(data, "/"_groupCode, "")
            Set ^MKEN1KTZ(K1) = updatedData
        }
    }

    Quit

Q9;
    Write "5. グループコードを入力すると、そのグループに権限のあるルーチンを全て表示するようにしてください。",!
    Read "Enter a group code : " , groupCode, !
    Set K1 = ""
    For {
        Set K1 = $ORDER(^MKEN1KTZ(K1))
        Quit:K1=""
        Set data = $GET(^MKEN1KTZ(K1))
        If $FIND(data , groupCode) > 0 {
            Write K1, " : ", data, !
        }
    }
    Quit

Q10;Please register the groups Q, R, S, T, U, and W in the group permission records for the routine "KEIW0011".
    Write "10.「KEIW0011」のグループ権限レコードに「Q、R、S、T、U、W」のグループを登録してください。", !
    Set K1 = "KEIW0011"
    Set groupCodes = $LISTBUILD("Q","R","S","T","U","W")
    For i = 1:1:$LISTLENGTH(groupCodes) {
        Set groupCode = $LISTGET(groupCodes, i)
        Set ^MKEN2KTZ(K1, "GRP", groupCode) = $ZDATE($HOROLOG, 8)
    }
    Write "Done !", !
    Quit

Q11;Please display all routines registered in the authorization master, showing how many times each one is registered under individual (employee) permissions and group permissions.
    Write "11. 権限マスタに登録されているルーチンが社員権限とグループ権限それぞれ何件ずつ登録されているか全て表示してください。", !!
    Set K1 = ""
    For {
        Set K1 = $ORDER(^MKEN2KTZ(K1))
        Quit:K1=""
        Set groupCount = 0
        Set employeeCount = 0

        Set groupID = ""
        For {
            Set groupID = $ORDER(^MKEN2KTZ(K1, "GRP", groupID))
            Quit:groupID=""
            Set groupCount = groupCount + 1
        }

        Set employeeID = ""
        For {
            Set employeeID = $ORDER(^MKEN2KTZ(K1, "SYA", employeeID))
            Quit:employeeID=""
            Set employeeCount = employeeCount + 1
            // process ^MKEN2KTZ(employeeID)
        }

        Write "Routine : ", K1, ?22, " | Group permission : ", groupCount, " | Employee count : ", employeeCount, !
    }

    Quit

Q12; From the employee permission records of the authorization master, retrieve the data for routine "EIGWINQ0420", and display the names of all employees who have permission (specifically, the field called P3: 漢字社員略名 = Kanji Employee Short Name).
    Write !, "12. 権限マスタの社員権限レコードより、「EIGWINQ0420」のデータを取得し、権限を持っている社員の名前[P3漢字社員略名]を全て表示してください。", !!
    Set employeeID = ""
    For {
        Set employeeID = $ORDER(^MKEN2KTZ("EIGWINQ0420", "SYA", employeeID))
        Quit:employeeID=""
        Set employeeData = $GET(^MSYA(employeeID))
        Set employeeShortCode = $PIECE(employeeData , $CHAR(22), 7)
        Set employeeName = $PIECE(employeeData , $CHAR(22), 1)

        Write "Employee ID : ", employeeID, " | Name : ", employeeName, " | Short code : ", employeeShortCode, !
    }

    Quit

Q13;From the employee permission records, display all routines that have at least one employee registered on or before May 31, 2018.
    Write !, "社員権限レコードより、2018年5月31日以前に登録された社員がいるルーチンを全て表示してください。", !!
    #; I am not sure this function should work with MSYA or MKEN2 ,
    #; And there is table structure explaination only for MKEN2, I think we need also for MSYA table structure explaination

    #; Set employeeID = ""
    #; For {
    #;     Set employeeID = $ORDER(^MSYA(employeeID))
    #;     Quit:employeeID=""
    #;     Set employeeData = $GET(^MSYA(employeeID))
    #;     // process ^MSYA(employeeID)
    #;     Set registerDate = $PIECE(employeeData, $CHAR(22) , 14 )
    #;     Write registerDate, !
    #; }

    Set K1 = ""
    For {
        Set K1 = $ORDER(^MKEN2KTZ(K1))
        Quit:K1=""
        // process ^MKEN2KTZ(K1)

        Set employeeID = ""
        For {
            Set employeeID = $ORDER(^MKEN2KTZ(K1, "SYA", employeeID))
            Quit:employeeID=""
            Set employeeData = $GET(^MKEN2KTZ(K1, "SYA", employeeID))
            If (employeeData < 20180531) {
                Write "Routine ID : ", K1, ?23, " | Employee ID : ", employeeID, " | Register Date : ", employeeData, !
            }
            // process ^MKEN2KTZ()
        }
    }

    Quit

Q14;From the group permission master only, delete entries whose routine names start with "w". Do not delete the base records.
    Write !,"15. グループ権限マスタのみから、先頭がwであるものを削除してください。基本レコードは消さないでください。", !
    Set K1 = ""
    For {
        Set K1 = $ORDER(^MKEN2KTZ(K1))
        Quit:K1=""
        
        Set employeeID = ""
        For {
            Set employeeID = $ORDER(^MKEN2KTZ(K1, "GRP", employeeID))
            Quit:employeeID=""
            If $ZCONVERT($EXTRACT(K1, 1, 1), "U")="W" {
                Kill ^MKEN2KTZ(K1, "GRP", employeeID)
                Write "Deleted : ", K1, !
            }
        }
    }
    Quit

Q15;From the employee permission records for routine "INQWMS0030", display all employee names in ascending order of the update date.If the update date is the same, sort by ascending employee number.
    Write "15. 「INQWMS0030」の社員権限マスタより、更新日が古い順に社員名を全て表示してください。更新日が同じ場合は社員番号の昇順に並べてください。", !
        Set K1 = "INQWMS0030"
        Set employeeID = ""
        For {
            Set employeeID = $ORDER(^MKEN2KTZ(K1, "SYA", employeeID))
            Quit:employeeID=""
            Set data = ^MKEN2KTZ(K1, "SYA", employeeID)
            Set employeeName = $PIECE($GET(^MSYA(employeeID)), $CHAR(22), 1) 
            Write employeeID, " : ", employeeName, !

            #; here again, I think we need explaination of ^MSYA table structure or may be I don't understand the question
        }
        Quit

Q16;From the authorization master, display the routines that have only group permissions (and no employee permissions).
    Write "16. 権限マスタより、グループ権限しかもたないルーチンを表示してください。", !
    Set K1 = ""
    For {
        Set K1 = $ORDER(^MKEN2KTZ(K1))
        Quit:K1=""
        If $DATA(^MKEN2KTZ(K1, "GRP")) && '$DATA(^MKEN2KTZ(K1, "SYA")) {
            Write K1, !
        }
    }

    Quit

